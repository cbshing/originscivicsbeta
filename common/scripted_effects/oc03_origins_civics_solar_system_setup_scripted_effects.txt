# Origins Civics Solar System Setup Scripted Effects
# by cbshing
#	Example:
#
#	example_effect = { 
#		add_energy = -100
#	}
#
#	In a script file:
#
#	effect = {
#		example_effect = yes
#	}

# ########################
# # Solar System Effects #
# ########################

### Solar System ###
# spawns fallen empire orbital debris 
# Scope: Solar System
spawn_fallen_empire_debris = {

}

### Stars & Planets ###
# remove deposits and stations on planet (stars)
# Scope: Planet
clear_deposits_and_stations = {
	clear_deposits = yes
	if = { limit = { has_mining_station = yes } 
		mining_station = { dismantle = yes }
	}
}

# spawns orbital debris around planet
# Scope: Solar System
# Scope: Planet
spawn_medium_orbital_debris = {
	random_list = {
		50 = { 
			create_ambient_object = {
				type = "medium_debris_01_object"
				location = this
			}
		}
		50 = { 
			create_ambient_object = {
				type = "medium_debris_02_object"
				location = solar_system
			}
		}
	}
}

# spawns habitat
# input event_target:megastructure_planet
# Scope: Planet
# root: Galactic Object
spawn_planet_habitat = {
	spawn_planet = {
		class = "pc_habitat"
		location = event_target:megastructure_planet
		orbit_location = yes
		orbit_angle_offset = 45
		orbit_distance_offset = 9.899
		size = 12
		has_ring = no
		
		init_effect = {
			set_name = "OC_HABITAT_PLANET_NAME"
			random_list = {
				10 = {
					set_planet_entity = {
						entity = "orbital_habitat_entity"
						graphical_culture = humanoid_01
					}
					modifier = { 
						factor = 0 
						NOT  = { host_has_dlc = "Humanoids Species Pack" }
					}
				}
				10 = {
					set_planet_entity = {
						entity = "orbital_habitat_entity"
						graphical_culture = plantoid_01
					}
					modifier = { 
						factor = 0 
						NOT  = { host_has_dlc = "Plantoid" }
					}
				}
				10 = {
					set_planet_entity = {
						entity = "orbital_habitat_entity"
						graphical_culture = mammalian_01
					}
				}
				10 = {
					set_planet_entity = {
						entity = "orbital_habitat_entity"
						graphical_culture = reptilian_01
					}
				}
				10 = {
					set_planet_entity = {
						entity = "orbital_habitat_entity"
						graphical_culture = avian_01
					}
				}
				10 = {
					set_planet_entity = {
						entity = "orbital_habitat_entity"
						graphical_culture = molluscoid_01
					}
				}
				10 = {
					set_planet_entity = {
						entity = "orbital_habitat_entity"
						graphical_culture = fungoid_01
					}
				}		
				10 = {
					set_planet_entity = {
						entity = "orbital_habitat_entity"
						graphical_culture = arthropoid_01
					}
				}
			}
			
			while = {
				limit = {
					any_tile = { has_blocker = yes }
				}
				random_tile = {
					limit = { has_blocker = yes }
					remove_blocker = yes
				}
			}
			if = {
				limit = {
					event_target:megastructure_planet = {
						colonizeable_planet = no
					}
				}
				copy_orbital_tile = event_target:megastructure_planet
			}
			set_planet_flag = megastructure
			set_planet_flag = habitat
			remove_orbital_deposit = yes
		}
	}
	event_target:megastructure_planet = {
		set_planet_flag = has_megastructure
	}
}

### Megastructures ###
# spawns habitat
# input event_target:megastructure_planet
# Scope: Planet
# root: Country
spawn_megastructure_habitat = {
	spawn_megastructure = {
		type = habitat_0
		location = event_target:megastructure_planet
		owner = fromfrom
	}
}

# spawns custom OC Dyson Sphere Tier2
# input event_target:megastructure_star
# Scope: Planet
# root: Country
spawn_megastructure_oc_dyson_sphere_tier2 = {
	spawn_megastructure = { 
		type = oc_dyson_sphere_2 
		location = event_target:megastructure_star
		owner = fromfrom
	}
}

# spawns custom OC Dyson Sphere Tier5
# input event_target:megastructure_star
# Scope: Planet
# root: Country
spawn_megastructure_oc_dyson_sphere_tier5 = {
	spawn_megastructure = { 
		type = oc_dyson_sphere_5
		location = event_target:megastructure_star
		owner = fromfrom
	}
}

### Gateways ###
# spawns deactivated gateway
# Scope: Solar System
spawn_megastructure_gateway_ruined = {
	spawn_megastructure = {
		type = gateway_ruined
		random_pos = yes
		orbit_angle = 360
	}
}

# activate random gateway
# Scope: Any
activate_megastructure_random_gateway = {
	random_megastructure = {
		limit = { is_megastructure_type = gateway_ruined }
		upgrade_megastructure_to = gateway_restored
		finish_upgrade = yes
	}
}

# spawns under construction gateway with owner
# Scope: Solar System
# root: Country
spawn_megastructure_gateway_construction = {
	spawn_megastructure = {
		type = gateway_0
		random_pos = yes
		orbit_angle = 360
		owner = fromfrom
	}
}

# spawns completed gateway with owner
# Scope: Solar System
# root: Country
spawn_megastructure_gateway_complete = {
	spawn_megastructure = {
		type = gateway_final
		random_pos = yes
		orbit_angle = 360
		owner = fromfrom
	}
}

# spawns deactivated gateway
# Scope: Solar System
spawn_megastructure_l_gateway = {
	spawn_megastructure = {
		type = lgate_base 
		random_pos = yes
		orbit_angle = 30
	}
}

### Wormholes ###
# spawns wormhole to a random star at least Eucledian distance 50 away and max distance 200
# Scope: Solar System
spawn_linked_natural_wormhole = {
	set_star_flag = has_wormhole
	random_system = {
		limit = { 
			NOT = { has_natural_wormhole = yes } 
			distance = {
				source = prev
				min_distance >= 50
				max_distance <= 200
			}
		}
		prev = { # done this way to ensure we don't spawn "orphan" wormholes (wormholes that aren't linked to anything)		
			spawn_natural_wormhole = {
				bypass_type = wormhole
				random_pos = yes
				orbit_angle = 360
			}
		}
		spawn_natural_wormhole = {
			bypass_type = wormhole
			random_pos = yes
			orbit_angle = 360
		}
		link_wormholes = prev
	}
}
